[{"C:\\dev\\stypendia\\client\\src\\index.js":"1","C:\\dev\\stypendia\\client\\src\\App.js":"2","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js":"3","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js":"4","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\items.js":"5","C:\\dev\\stypendia\\client\\src\\pages\\login.js":"6","C:\\dev\\stypendia\\client\\src\\pages\\register.js":"7","C:\\dev\\stypendia\\client\\src\\pages\\home.js":"8","C:\\dev\\stypendia\\client\\src\\components\\inputs.js":"9","C:\\dev\\stypendia\\client\\src\\components\\Rodo.js":"10","C:\\dev\\stypendia\\client\\src\\components\\Title.js":"11","C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js":"12","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js":"13","C:\\dev\\stypendia\\client\\src\\context\\types.js":"14","C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js":"15","C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js":"16","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js":"17","C:\\dev\\stypendia\\client\\src\\pages\\verify.js":"18"},{"size":220,"mtime":1608816802276,"results":"19","hashOfConfig":"20"},{"size":1221,"mtime":1609019843004,"results":"21","hashOfConfig":"20"},{"size":436,"mtime":1608721369033,"results":"22","hashOfConfig":"20"},{"size":2048,"mtime":1608853488293,"results":"23","hashOfConfig":"20"},{"size":1844,"mtime":1608815238563,"results":"24","hashOfConfig":"20"},{"size":4488,"mtime":1609021071073,"results":"25","hashOfConfig":"20"},{"size":6133,"mtime":1609021229044,"results":"26","hashOfConfig":"20"},{"size":479,"mtime":1609020947540,"results":"27","hashOfConfig":"20"},{"size":1390,"mtime":1608803333774,"results":"28","hashOfConfig":"20"},{"size":4589,"mtime":1608724734557,"results":"29","hashOfConfig":"20"},{"size":792,"mtime":1608799587288,"results":"30","hashOfConfig":"20"},{"size":1417,"mtime":1608890680880,"results":"31","hashOfConfig":"20"},{"size":425,"mtime":1608890663144,"results":"32","hashOfConfig":"20"},{"size":137,"mtime":1608850595166,"results":"33","hashOfConfig":"20"},{"size":105,"mtime":1608848462800,"results":"34","hashOfConfig":"20"},{"size":2244,"mtime":1608936576713,"results":"35","hashOfConfig":"20"},{"size":652,"mtime":1608932937423,"results":"36","hashOfConfig":"20"},{"size":1427,"mtime":1609029057684,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1cla2w0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"C:\\dev\\stypendia\\client\\src\\index.js",[],["83","84"],"C:\\dev\\stypendia\\client\\src\\App.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js",["85","86","87"],"import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, Menu } from 'semantic-ui-react';\r\nimport { leftMenuItems, rightMenuItems } from './items';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst MainMenu = () => {\r\n  const [activeItem, setActiveItem] = useState('home');\r\n  const [hasOwnSub, setHasOwnSub] = useState(false);\r\n\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, setUser } = authContext;\r\n\r\n\r\n  return (\r\n    <Menu icon='labeled' style={styles.main}>\r\n      {leftMenuItems\r\n        .filter(\r\n          (item) =>\r\n            (item.noOwnSubDisplay === !hasOwnSub ||\r\n              item.hasOwnSubDisplay === hasOwnSub) &&\r\n            item.isLoggedInDisplay === isLoggedIn\r\n        )\r\n        .map((item) => (\r\n          <Link to={item.url} key={item.id}>\r\n            <Menu.Item\r\n              as='div'\r\n              icon={item.icon}\r\n              content={item.title}\r\n              name={item.name}\r\n              active={activeItem === item.name}\r\n              onClick={() => setActiveItem(item.name)}\r\n            />\r\n          </Link>\r\n        ))}\r\n\r\n      <Menu.Menu position='right' style={styles.right}>\r\n        {rightMenuItems\r\n          .filter((item) => item.isLoggedInDisplay === isLoggedIn)\r\n          .map((item) => (\r\n            <Link to={item.url} key={item.id}>\r\n              <Menu.Item\r\n                as='div'\r\n                icon={item.icon}\r\n                content={item.title}\r\n                name={item.name}\r\n                active={activeItem === item.name}\r\n                onClick={() => setActiveItem(item.name)}\r\n              />\r\n            </Link>\r\n          ))}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    zIndex: 100,\r\n  },\r\n  right: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 100,\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n  },\r\n};\r\nexport default MainMenu;\r\n","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\items.js",[],["88","89"],"C:\\dev\\stypendia\\client\\src\\pages\\login.js",["90","91"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport Title from '../components/Title';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { loginInputs } from '../components/inputs';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\n\r\nconst Login = ({ history }) => {\r\n  const { state, dispatch } = useContext(AlertContext);\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && history.push('/');\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    axios\r\n      .post(`/api/v1/users/login`, body, headers)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          dispatch({\r\n            type: 'ADD_NOTIFICATION',\r\n            payload: {\r\n              id: uuid4(),\r\n              type: data.data.resStatus,\r\n              title: data.data.alertTitle,\r\n              message: data.data.msgPL,\r\n            },\r\n          });\r\n          setUser(data.data.user);\r\n          await setIsLoading(false);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          dispatch({\r\n            type: 'ADD_NOTIFICATION',\r\n            payload: {\r\n              id: uuid4(),\r\n              type: err.response.data.resStatus,\r\n              title: err.response.data.alertTitle,\r\n              message: err.response.data.msgPL,\r\n            },\r\n          });\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title content='Logowanie' />\r\n      <Segment placeholder style={styles.main} size='large'>\r\n        <Grid columns={2} relaxed='very' stackable>\r\n          <Grid.Column>\r\n            <Form>\r\n              {loginInputs.map((input) => {\r\n                return (\r\n                  <div key={input.id}>\r\n                    <Form.Input\r\n                      onChange={(e) => handleOnChange(e)}\r\n                      required\r\n                      style={styles.input}\r\n                      icon={input.icon}\r\n                      iconPosition='left'\r\n                      label={input.label}\r\n                      placeholder={input.placeholder}\r\n                      type={input.type}\r\n                      name={input.name}\r\n                    />\r\n                    <div key={input.id} style={styles.small}>\r\n                      {errors && errors[input.name]}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <span>{}</span>\r\n              <Button\r\n                loading={isLoading}\r\n                type='submit'\r\n                content='Zaloguj się'\r\n                primary\r\n                size='large'\r\n                onClick={handleOnClick}\r\n              />\r\n            </Form>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column verticalAlign='middle'>\r\n            <Button content='Zarejestruj się' icon='signup' size='big' />\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Divider vertical>lub</Divider>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    marginTop: '7rem',\r\n    width: '95%',\r\n    marginBottom: '5rem',\r\n  },\r\n  column: {},\r\n  buttonWrapper: {\r\n    marginTop: '10px',\r\n  },\r\n  ol: {\r\n    fontSize: '.85rem',\r\n    color: '#666',\r\n  },\r\n  intro: {\r\n    fontSize: '.85rem',\r\n    marginLeft: '1.8rem',\r\n    marginTop: '2rem',\r\n    color: '#666',\r\n  },\r\n  input: {\r\n    width: '290px',\r\n    marginLeft: '-35px',\r\n  },\r\n  small: {\r\n    marginBottom: '30px',\r\n    fontSize: '.85rem',\r\n    textAlign: 'center',\r\n\r\n    marginTop: '-.9rem',\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\register.js",["92","93","94"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport Rodo from '../components/Rodo';\r\nimport Title from '../components/Title';\r\nimport { registerInputs } from '../components/inputs';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\n\r\nconst Register = (props) => {\r\n  const { state, dispatch } = useContext(AlertContext);\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && props.history.push('/');\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n  const [isRodoChecked, setIsRodoChecked] = useState(false);\r\n  const [isRegulationsChecked, setIsRegulationsChecked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_ORIGIN}/api/v1/users`, body, headers)\r\n      .then((data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          setIsLoading(false);\r\n          setTimeout(() => props.history.push('/login'), 1500);\r\n          dispatch({\r\n            type: 'ADD_NOTIFICATION',\r\n            payload: {\r\n              id: uuid4(),\r\n              type: data.data.resStatus,\r\n              title: data.data.alertTitle,\r\n              message: data.data.msgPL,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        setErrors(err.response.data);\r\n        dispatch({\r\n          type: 'ADD_NOTIFICATION',\r\n          payload: {\r\n            id: uuid4(),\r\n            type:err.response.data.resStatus,\r\n            title:err.response.data.alertTitle,\r\n            message:err.response.data.msgPL,\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <div style={styles.main}>\r\n      <Title content='Dodawanie konta' />\r\n      <Segment placeholder size='large'>\r\n        <Grid columns={2} relaxed='very' stackable>\r\n          <Grid.Column textAlign='left' verticalAlign='middle'>\r\n            <Header textAlign='center'>Potwierdź niezbędne oświadczenia</Header>\r\n\r\n            <Checkbox\r\n              onChange={() => setIsRegulationsChecked(!isRegulationsChecked)}\r\n              // value={isRegulationsChecked}\r\n              checked={isRegulationsChecked}\r\n              label={\r\n                <label>\r\n                  Oświadczam, iż zapoznałam/em się z regulaminem i akceptuję\r\n                  jego postanowienia <span style={{ color: 'red' }}>*</span>\r\n                </label>\r\n              }\r\n            />\r\n\r\n            <Rodo />\r\n\r\n            <Checkbox\r\n              onChange={() => setIsRodoChecked(!isRodoChecked)}\r\n              // value={isRodoChecked}\r\n              checked={isRodoChecked}\r\n              style={{ marginBottom: '30px' }}\r\n              required\r\n              label={\r\n                <label>\r\n                  Oświadczam, iż zapoznałam/em się z powyższą informacją\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                </label>\r\n              }\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column style={styles.column}>\r\n            <Container>\r\n              <Header>... podaj swoje dane</Header>\r\n              <Form>\r\n                {registerInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        loading={isLoading}\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        style={styles.input}\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n                      <div key={input.id} style={styles.small}>\r\n                        {errors && errors[input.name]}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Zarejestruj się'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                  disabled={\r\n                    !isRegulationsChecked || !isRodoChecked ? true : false\r\n                  }\r\n                />\r\n                <div style={styles.buttonWrapper}>\r\n                  <span>Masz już konto?</span>\r\n                  <Button content='Zaloguj się' icon='user' size='mini' />\r\n                </div>\r\n              </Form>\r\n            </Container>\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Divider vertical>oraz</Divider>\r\n      </Segment>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    marginTop: '7rem',\r\n    width: '95%',\r\n    marginBottom: '5rem',\r\n  },\r\n  column: {},\r\n  buttonWrapper: {\r\n    marginTop: '10px',\r\n  },\r\n  ol: {\r\n    fontSize: '.85rem',\r\n    color: '#666',\r\n  },\r\n  intro: {\r\n    fontSize: '.85rem',\r\n    marginLeft: '1.8rem',\r\n    marginTop: '2rem',\r\n    color: '#666',\r\n  },\r\n  input: {\r\n    // color: errors ? 'red' :'#666',\r\n    width: '290px',\r\n    marginLeft: '-35px',\r\n  },\r\n  small: {\r\n    marginBottom: '30px',\r\n    fontSize: '.85rem',\r\n    textAlign: 'center',\r\n\r\n    marginTop: '-.9rem',\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\home.js",["95","96"],"import React, { useContext, u, useEffect } from 'react';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport Title from '../components/Title';\r\n\r\nconst Home = ({ history }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  !isLoggedIn && history.push('/login');\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  return <Title content='Strona statowa' />;\r\n};\r\n\r\nexport default Home;\r\n","C:\\dev\\stypendia\\client\\src\\components\\inputs.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Rodo.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Title.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js",["97"],"import React, { useEffect, useReducer } from 'react';\r\nimport authReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\n\r\nimport { SET_USER, CHECK_IS_LOGGED_IN } from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n  };\r\n\r\n  const checkIsAuthenticated = async () => {\r\n    const result = await (\r\n      await fetch('http://localhost:5003/api/v1/users/me', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n    ).json();\r\n    console.log(result);\r\n    result.resStatus === 'success' ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n    setUser(result.user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const setUser = (user) => {\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const setIsLoggedIn = (is) => {\r\n    dispatch({\r\n      type: CHECK_IS_LOGGED_IN,\r\n      payload: is,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        setUser,\r\n        checkIsAuthenticated,\r\n        isLoggedIn: state.isLoggedIn,\r\n        // logOutCallback\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js",[],"C:\\dev\\stypendia\\client\\src\\context\\types.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js",[],"C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js",["98"],"import React, { useContext } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport './Alert.css';\r\nimport { AlertContext } from '../../context/alert/alertContext';\r\n\r\n\r\nconst Alert = (props) => {\r\n  const { state, dispatch } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className={`notification-container ${props.position}`}>\r\n      {state.map((notification, i) => {\r\n        if (props.autoDeleteInterval) {\r\n          setInterval(() => {\r\n            dispatch({\r\n              type: 'DELETE_NOTIFICATION',\r\n              payload: notification.id,\r\n            });\r\n          }, props.autoDeleteInterval);\r\n        }\r\n\r\n        switch (notification.type) {\r\n          case 'error':\r\n            return (\r\n              <div key={notification.id} className={`${props.position}`}>\r\n                <Message error className='toast'>\r\n                  <Message.Header>{notification.title}</Message.Header>\r\n                  <p>{notification.message}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n          case 'info':\r\n            return (\r\n              <div key={notification.id} className={`${props.position}`}>\r\n                <Message info className='toast'>\r\n                  <Message.Header>{notification.title}</Message.Header>\r\n                  <p>{notification.message}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          case 'warning':\r\n            return (\r\n              <div key={notification.id} className={`${props.position}`}>\r\n                <Message warning className='toast'>\r\n                  <Message.Header>{notification.title}</Message.Header>\r\n                  <p>{notification.message}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          case 'success':\r\n            return (\r\n              <div key={notification.id} className={`${props.position}`}>\r\n                <Message success className='toast'>\r\n                  <Message.Header>{notification.title}</Message.Header>\r\n                  <p>{notification.message}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          default:\r\n            break;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\verify.js",["99","100"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nconst Verify = ({ location: { search }, history }) => {\r\n  const { dispatch } = useContext(AlertContext);\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && history.push('/');\r\n\r\n  const [query, setQuery] = useState(search);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n\r\n    axios\r\n      .post(`/api/v1/email/verify${query}`)\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: 'ADD_NOTIFICATION',\r\n          payload: {\r\n            id: uuid4(),\r\n            type: data.data.resStatus,\r\n            title: data.data.alertTitle,\r\n            message: data.data.msgPL,\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: 'ADD_NOTIFICATION',\r\n          payload: {\r\n            id: uuid4(),\r\n            type: err.response.data.resStatus,\r\n            title: err.response.data.alertTitle,\r\n            message: err.response.data.msgPL,\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Verify</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":17},{"ruleId":"105","severity":1,"message":"109","line":9,"column":21,"nodeType":"107","messageId":"108","endLine":9,"endColumn":33},{"ruleId":"105","severity":1,"message":"110","line":13,"column":23,"nodeType":"107","messageId":"108","endLine":13,"endColumn":30},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":18,"column":11,"nodeType":"107","messageId":"108","endLine":18,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":30,"column":6,"nodeType":"116","endLine":30,"endColumn":8,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"113","line":21,"column":11,"nodeType":"107","messageId":"108","endLine":21,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":24,"column":11,"nodeType":"107","messageId":"108","endLine":24,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":35,"column":6,"nodeType":"116","endLine":35,"endColumn":8,"suggestions":"118"},{"ruleId":"105","severity":1,"message":"119","line":1,"column":29,"nodeType":"107","messageId":"108","endLine":1,"endColumn":30},{"ruleId":"114","severity":1,"message":"115","line":11,"column":6,"nodeType":"116","endLine":11,"endColumn":8,"suggestions":"120"},{"ruleId":"114","severity":1,"message":"115","line":30,"column":6,"nodeType":"116","endLine":30,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":12,"column":36,"nodeType":"124","messageId":"125","endLine":12,"endColumn":38},{"ruleId":"105","severity":1,"message":"126","line":14,"column":17,"nodeType":"107","messageId":"108","endLine":14,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":45,"column":6,"nodeType":"116","endLine":45,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'setHasOwnSub' is assigned a value but never used.","'setUser' is assigned a value but never used.",["129"],["130"],"'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIsAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["131"],["132"],"'u' is defined but never used.",["133"],["134"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setQuery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkIsAuthenticated', 'dispatch', and 'query'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"136","fix":"139"},{"desc":"136","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [checkIsAuthenticated]",{"range":"143","text":"144"},{"range":"145","text":"144"},{"range":"146","text":"144"},{"range":"147","text":"144"},"Update the dependencies array to be: [checkIsAuthenticated, dispatch, query]",{"range":"148","text":"149"},[898,900],"[checkIsAuthenticated]",[1106,1108],[397,399],[803,805],[1325,1327],"[checkIsAuthenticated, dispatch, query]"]