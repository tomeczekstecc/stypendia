[{"C:\\dev\\stypendia\\client\\src\\index.js":"1","C:\\dev\\stypendia\\client\\src\\App.js":"2","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js":"3","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js":"4","C:\\dev\\stypendia\\client\\src\\pages\\login.js":"5","C:\\dev\\stypendia\\client\\src\\pages\\register.js":"6","C:\\dev\\stypendia\\client\\src\\pages\\home.js":"7","C:\\dev\\stypendia\\client\\src\\components\\inputs.js":"8","C:\\dev\\stypendia\\client\\src\\components\\Rodo.js":"9","C:\\dev\\stypendia\\client\\src\\components\\Title.js":"10","C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js":"11","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js":"12","C:\\dev\\stypendia\\client\\src\\context\\types.js":"13","C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js":"14","C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js":"15","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js":"16","C:\\dev\\stypendia\\client\\src\\pages\\verify.js":"17","C:\\dev\\stypendia\\client\\src\\context\\alert\\AlertState.js":"18","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertReducer.js":"19","C:\\dev\\stypendia\\client\\src\\items.js":"20","C:\\dev\\stypendia\\client\\src\\pages\\resend.js":"21"},{"size":220,"mtime":1608816802276,"results":"22","hashOfConfig":"23"},{"size":1288,"mtime":1609104640842,"results":"24","hashOfConfig":"23"},{"size":436,"mtime":1608721369033,"results":"25","hashOfConfig":"23"},{"size":2052,"mtime":1609101742893,"results":"26","hashOfConfig":"23"},{"size":4386,"mtime":1609104577437,"results":"27","hashOfConfig":"23"},{"size":6059,"mtime":1609104395019,"results":"28","hashOfConfig":"23"},{"size":488,"mtime":1609090096275,"results":"29","hashOfConfig":"23"},{"size":1390,"mtime":1608803333774,"results":"30","hashOfConfig":"23"},{"size":4589,"mtime":1608724734557,"results":"31","hashOfConfig":"23"},{"size":792,"mtime":1608799587288,"results":"32","hashOfConfig":"23"},{"size":1417,"mtime":1608890680880,"results":"33","hashOfConfig":"23"},{"size":425,"mtime":1608890663144,"results":"34","hashOfConfig":"23"},{"size":249,"mtime":1609080271357,"results":"35","hashOfConfig":"23"},{"size":105,"mtime":1608848462800,"results":"36","hashOfConfig":"23"},{"size":2110,"mtime":1609080271355,"results":"37","hashOfConfig":"23"},{"size":109,"mtime":1609080271356,"results":"38","hashOfConfig":"23"},{"size":2868,"mtime":1609103430967,"results":"39","hashOfConfig":"23"},{"size":871,"mtime":1609080271356,"results":"40","hashOfConfig":"23"},{"size":378,"mtime":1609080271357,"results":"41","hashOfConfig":"23"},{"size":2416,"mtime":1609103407411,"results":"42","hashOfConfig":"23"},{"size":4184,"mtime":1609106123414,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1cla2w0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\stypendia\\client\\src\\index.js",[],["95","96"],"C:\\dev\\stypendia\\client\\src\\App.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js",["97","98","99"],"import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, Menu } from 'semantic-ui-react';\r\nimport { leftMenuItems, rightMenuItems } from '../../items';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst MainMenu = () => {\r\n  const [activeItem, setActiveItem] = useState('home');\r\n  const [hasOwnSub, setHasOwnSub] = useState(false);\r\n\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, setUser } = authContext;\r\n\r\n\r\n  return (\r\n    <Menu icon='labeled' style={styles.main}>\r\n      {leftMenuItems\r\n        .filter(\r\n          (item) =>\r\n            (item.noOwnSubDisplay === !hasOwnSub ||\r\n              item.hasOwnSubDisplay === hasOwnSub) &&\r\n            item.isLoggedInDisplay === isLoggedIn\r\n        )\r\n        .map((item) => (\r\n          <Link to={item.url} key={item.id}>\r\n            <Menu.Item\r\n              as='div'\r\n              icon={item.icon}\r\n              content={item.title}\r\n              name={item.name}\r\n              active={activeItem === item.name}\r\n              onClick={() => setActiveItem(item.name)}\r\n            />\r\n          </Link>\r\n        ))}\r\n\r\n      <Menu.Menu position='right' style={styles.right}>\r\n        {rightMenuItems\r\n          .filter((item) => item.isLoggedInDisplay === isLoggedIn)\r\n          .map((item) => (\r\n            <Link to={item.url} key={item.id}>\r\n              <Menu.Item\r\n                as='div'\r\n                icon={item.icon}\r\n                content={item.title}\r\n                name={item.name}\r\n                active={activeItem === item.name}\r\n                onClick={() => setActiveItem(item.name)}\r\n              />\r\n            </Link>\r\n          ))}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    zIndex: 100,\r\n  },\r\n  right: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 100,\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n  },\r\n};\r\nexport default MainMenu;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\login.js",["100"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport Title from '../components/Title';\r\nimport AlertContext from '../context/alert/alertContext';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { loginInputs } from '../components/inputs';\r\n\r\nconst Login = ({ history }) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    isLoggedIn && history.push('/');\r\n  }, [isLoggedIn]);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    axios\r\n      .post(`/api/v1/users/login`, body, headers)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          setUser(data.data.user);\r\n          await setIsLoading(false);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title content='Logowanie' />\r\n      <Segment placeholder style={styles.main} size='large'>\r\n        <Grid columns={2} relaxed='very' stackable>\r\n          <Grid.Column>\r\n            <Form>\r\n              {loginInputs.map((input) => {\r\n                return (\r\n                  <div key={input.id}>\r\n                    <Form.Input\r\n                      onChange={(e) => handleOnChange(e)}\r\n                      required\r\n                      style={styles.input}\r\n                      icon={input.icon}\r\n                      iconPosition='left'\r\n                      label={input.label}\r\n                      placeholder={input.placeholder}\r\n                      type={input.type}\r\n                      name={input.name}\r\n                    />\r\n\r\n                    {errors && errors[input.name] && (\r\n                      <Label\r\n                        basic\r\n                        color='red'\r\n                        pointing='above'\r\n                        key={input.id}\r\n                        style={styles.small}\r\n                      >\r\n                        {errors[input.name]}\r\n                      </Label>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n              <span>{}</span>\r\n              <Button\r\n                loading={isLoading}\r\n                type='submit'\r\n                content='Zaloguj się'\r\n                primary\r\n                size='large'\r\n                onClick={handleOnClick}\r\n              />\r\n            </Form>\r\n\r\n\r\n          </Grid.Column>\r\n\r\n          <Grid.Column verticalAlign='middle'>\r\n            <Link to='register'>\r\n              <Button content='Zarejestruj się' icon='user plus' size='big' />\r\n            </Link>\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Divider vertical>lub</Divider>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    marginTop: '7rem',\r\n    width: '95%',\r\n    marginBottom: '5rem',\r\n  },\r\n  column: {},\r\n  buttonWrapper: {\r\n    marginTop: '10px',\r\n  },\r\n  ol: {\r\n    fontSize: '.85rem',\r\n    color: '#666',\r\n  },\r\n  intro: {\r\n    fontSize: '.85rem',\r\n    marginLeft: '1.8rem',\r\n    marginTop: '2rem',\r\n    color: '#666',\r\n  },\r\n  input: {\r\n    width: '290px',\r\n    marginLeft: '-35px',\r\n    marginBottom: '20px',\r\n  },\r\n  small: {\r\n    fontSize: '.9rem',\r\n    textAlign: 'center',\r\n    transform: 'translateY(-35px)',\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\register.js",["101","102","103"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport Rodo from '../components/Rodo';\r\nimport Title from '../components/Title';\r\nimport { registerInputs } from '../components/inputs';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\nconst Register = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && props.history.push('/');\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n  const [isRodoChecked, setIsRodoChecked] = useState(false);\r\n  const [isRegulationsChecked, setIsRegulationsChecked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_ORIGIN}/api/v1/users`, body, headers)\r\n      .then((data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          setIsLoading(false);\r\n          setTimeout(() => props.history.push('/login'), 1500);\r\n          addAlert(data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        setErrors(err.response.data);\r\n        addAlert(err.response.data);\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <div style={styles.main}>\r\n      <Title content='Dodawanie konta' />\r\n      <Segment placeholder size='large'>\r\n        <Grid columns={2} relaxed='very' stackable>\r\n          <Grid.Column textAlign='left' verticalAlign='middle'>\r\n            <Header textAlign='center'>Potwierdź niezbędne oświadczenia</Header>\r\n\r\n            <Checkbox\r\n              onChange={() => setIsRegulationsChecked(!isRegulationsChecked)}\r\n              // value={isRegulationsChecked}\r\n              checked={isRegulationsChecked}\r\n              label={\r\n                <label>\r\n                  Oświadczam, iż zapoznałam/em się z regulaminem i akceptuję\r\n                  jego postanowienia <span style={{ color: 'red' }}>*</span>\r\n                </label>\r\n              }\r\n            />\r\n\r\n            <Rodo />\r\n\r\n            <Checkbox\r\n              onChange={() => setIsRodoChecked(!isRodoChecked)}\r\n              // value={isRodoChecked}\r\n              checked={isRodoChecked}\r\n              style={{ marginBottom: '30px' }}\r\n              required\r\n              label={\r\n                <label>\r\n                  Oświadczam, iż zapoznałam/em się z powyższą informacją\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                </label>\r\n              }\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column style={styles.column}>\r\n            <Container>\r\n              <Header>... podaj swoje dane</Header>\r\n              <Form>\r\n                {registerInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        loading={isLoading}\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        style={styles.input}\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n                      {errors && errors[input.name] && (\r\n                        <Label\r\n                          basic\r\n                          color='red'\r\n                          pointing='above'\r\n                          key={input.id}\r\n                          style={styles.small}\r\n                        >\r\n                          {errors[input.name]}\r\n                        </Label>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Zarejestruj się'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                  disabled={\r\n                    !isRegulationsChecked || !isRodoChecked ? true : false\r\n                  }\r\n                />\r\n              </Form>\r\n              <div style={styles.buttonWrapper}>\r\n                <div style={styles.span}>Masz już konto?</div>\r\n                <Button\r\n                   content='Zaloguj się'\r\n                  icon='user'\r\n                  size='mini'\r\n                />\r\n              </div>\r\n            </Container>\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Divider vertical>oraz</Divider>\r\n      </Segment>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    marginTop: '7rem',\r\n    width: '95%',\r\n    marginBottom: '5rem',\r\n  },\r\n\r\n  buttonWrapper: {\r\n    marginTop: '20px',\r\n  },\r\n  span: {\r\n     fontSize: '1rem',\r\n  },\r\n  ol: {\r\n    fontSize: '.85rem',\r\n    color: '#666',\r\n  },\r\n  intro: {\r\n    fontSize: '.85rem',\r\n    marginLeft: '1.8rem',\r\n    marginTop: '2rem',\r\n    color: '#666',\r\n  },\r\n\r\n  input: {\r\n    width: '290px',\r\n    marginLeft: '-35px',\r\n    marginBottom: '20px',\r\n  },\r\n  small: {\r\n    fontSize: '.9rem',\r\n    textAlign: 'center',\r\n    transform: 'translateY(-35px)',\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\home.js",["104"],"import React, { useContext, useEffect } from 'react';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport Title from '../components/Title';\r\n\r\nconst Home = ({ history }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    !isLoggedIn && history.push('/login');\r\n  }, [isLoggedIn]);\r\n\r\n  return <Title content='Strona statowa' />;\r\n};\r\n\r\nexport default Home;\r\n","C:\\dev\\stypendia\\client\\src\\components\\inputs.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Rodo.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Title.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js",["105"],"import React, { useEffect, useReducer } from 'react';\r\nimport authReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\n\r\nimport { SET_USER, CHECK_IS_LOGGED_IN } from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n  };\r\n\r\n  const checkIsAuthenticated = async () => {\r\n    const result = await (\r\n      await fetch('http://localhost:5003/api/v1/users/me', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n    ).json();\r\n    console.log(result);\r\n    result.resStatus === 'success' ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n    setUser(result.user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const setUser = (user) => {\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const setIsLoggedIn = (is) => {\r\n    dispatch({\r\n      type: CHECK_IS_LOGGED_IN,\r\n      payload: is,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        setUser,\r\n        checkIsAuthenticated,\r\n        isLoggedIn: state.isLoggedIn,\r\n        // logOutCallback\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js",[],"C:\\dev\\stypendia\\client\\src\\context\\types.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js",[],"C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js",["106"],"import React, { useContext } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport './Alert.css';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alerts, deleteAlert } = alertContext;\r\n\r\n  return (\r\n    <div className={`notification-container ${props.position}`}>\r\n      {alerts.map((alert, i) => {\r\n        if (props.autoDeleteInterval) {\r\n          setInterval(() => {\r\n            deleteAlert(alert.id);\r\n          }, props.autoDeleteInterval);\r\n        }\r\n\r\n        switch (alert.resStatus) {\r\n          case 'error':\r\n            return (\r\n              <div key={alert.id} className={`${props.position}`}>\r\n                <Message error className='toast'>\r\n                  <Message.Header>{alert.alertTitle}</Message.Header>\r\n                  <p>{alert.msgPL}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n          case 'info':\r\n            return (\r\n              <div key={alert.id} className={`${props.position}`}>\r\n                <Message info className='toast'>\r\n                  <Message.Header>{alert.alertTitle}</Message.Header>\r\n                  <p>{alert.msgPL}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          case 'warning':\r\n            return (\r\n              <div key={alert.id} className={`${props.position}`}>\r\n                <Message warning className='toast'>\r\n                  <Message.Header>{alert.alertTitle}</Message.Header>\r\n                  <p>{alert.msgPL}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          case 'success':\r\n            return (\r\n              <div key={alert.id} className={`${props.position}`}>\r\n                <Message success className='toast'>\r\n                  <Message.Header>{alert.alertTitle}</Message.Header>\r\n                  <p>{alert.msgPL}</p>\r\n                </Message>\r\n              </div>\r\n            );\r\n\r\n          default:\r\n            break;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\verify.js",["107","108","109","110","111"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport AlertContext from '../context/alert/alertContext';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { verItems } from '../items';\r\nimport {\r\n  Button,\r\n  Dimmer,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Loader,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport Title from '../components/Title';\r\n\r\nconst Verify = ({ location: { search }, history }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && history.push('/');\r\n\r\n  const [query, setQuery] = useState(search);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    axios\r\n      .post(`/api/v1/email/verify${query}`)\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        addAlert(data.data);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        addAlert(err.response.data);\r\n      });\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div>\r\n      <Title content='Weryfikacja konta' />\r\n      <Loader active={isLoading} size='huge'>\r\n        Weryfikujemy\r\n      </Loader>\r\n\r\n      {!isLoading && (\r\n        <>\r\n          <Header textAlign='left' size='huge' style={styles.leadingHeader}>\r\n            Świetnie!!! Udało się potwierdzić konto.\r\n          </Header>\r\n\r\n          <List\r\n            size='large'\r\n            selection\r\n            animated\r\n            divided\r\n            verticalAlign='middle'\r\n            hor\r\n          >\r\n            {verItems.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <Link to={item.to}>\r\n                  <List.Content floated='right'>\r\n                    <Button\r\n                      size={item.button === 'Logowanie'? 'big' : null}\r\n                      primary={item.button === 'Logowanie'}\r\n                      icon\r\n                      labelPosition='right'\r\n                    >\r\n                      {item.button}\r\n                      <Icon name='right arrow' />\r\n                    </Button>\r\n                  </List.Content>\r\n                  <List.Content verticalAlign='bottom' floated='left'>\r\n                    <Header as='h3' style={styles.itemHeader}>\r\n                      <Icon name={item.icon} /> {item.name}\r\n                    </Header>\r\n                  </List.Content>\r\n                </Link>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  leadingHeader: {\r\n    marginBottom: '5rem',\r\n    marginTop: '8rem',\r\n  },\r\n  itemHeader: {\r\n    transform: 'translateY(8px)',\r\n  },\r\n};\r\n\r\nexport default Verify;\r\n","C:\\dev\\stypendia\\client\\src\\context\\alert\\AlertState.js",[],"C:\\dev\\stypendia\\client\\src\\context\\alert\\alertReducer.js",["112"],"import { DELETE_NOTIFICATION, ADD_NOTIFICATION } from '../types';\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTIFICATION:\r\n      console.log(state, action.payload);\r\n      return [...state, action.payload];\r\n    case DELETE_NOTIFICATION:\r\n      return state.filter((n) => n.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\dev\\stypendia\\client\\src\\items.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\resend.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"122","line":9,"column":21,"nodeType":"120","messageId":"121","endLine":9,"endColumn":33},{"ruleId":"118","severity":1,"message":"123","line":13,"column":23,"nodeType":"120","messageId":"121","endLine":13,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":32,"column":6,"nodeType":"126","endLine":32,"endColumn":18,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":21},{"ruleId":"118","severity":1,"message":"123","line":26,"column":11,"nodeType":"120","messageId":"121","endLine":26,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":37,"column":6,"nodeType":"126","endLine":37,"endColumn":8,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"125","line":11,"column":6,"nodeType":"126","endLine":11,"endColumn":18,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"129","line":30,"column":6,"nodeType":"126","endLine":30,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":12,"column":30,"nodeType":"135","messageId":"136","endLine":12,"endColumn":32},{"ruleId":"118","severity":1,"message":"137","line":9,"column":3,"nodeType":"120","messageId":"121","endLine":9,"endColumn":9},{"ruleId":"118","severity":1,"message":"138","line":12,"column":3,"nodeType":"120","messageId":"121","endLine":12,"endColumn":8},{"ruleId":"118","severity":1,"message":"139","line":15,"column":3,"nodeType":"120","messageId":"121","endLine":15,"endColumn":10},{"ruleId":"118","severity":1,"message":"140","line":29,"column":17,"nodeType":"120","messageId":"121","endLine":29,"endColumn":25},{"ruleId":"124","severity":1,"message":"141","line":43,"column":6,"nodeType":"126","endLine":43,"endColumn":18,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":1,"nodeType":"145","endLine":12,"endColumn":3},{"ruleId":"124","severity":1,"message":"125","line":32,"column":6,"nodeType":"126","endLine":32,"endColumn":18,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'setHasOwnSub' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIsAuthenticated' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["149"],"'uuid4' is defined but never used.","React Hook useEffect has a missing dependency: 'checkIsAuthenticated'. Either include it or remove the dependency array.",["150"],["151"],["152"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Dimmer' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'setQuery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addAlert', 'checkIsAuthenticated', and 'query'. Either include them or remove the dependency array.",["153"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"155","fix":"159"},{"desc":"157","fix":"160"},{"desc":"161","fix":"162"},{"desc":"155","fix":"163"},"Update the dependencies array to be: [checkIsAuthenticated, history, isLoggedIn]",{"range":"164","text":"165"},"Update the dependencies array to be: [checkIsAuthenticated]",{"range":"166","text":"167"},{"range":"168","text":"165"},{"range":"169","text":"167"},"Update the dependencies array to be: [addAlert, checkIsAuthenticated, isLoggedIn, query]",{"range":"170","text":"171"},{"range":"172","text":"165"},[942,954],"[checkIsAuthenticated, history, isLoggedIn]",[1143,1145],"[checkIsAuthenticated]",[396,408],[803,805],[1163,1175],"[addAlert, checkIsAuthenticated, isLoggedIn, query]",[852,864]]