[{"C:\\dev\\stypendia\\client\\src\\index.js":"1","C:\\dev\\stypendia\\client\\src\\App.js":"2","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js":"3","C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js":"4","C:\\dev\\stypendia\\client\\src\\pages\\login.js":"5","C:\\dev\\stypendia\\client\\src\\pages\\register.js":"6","C:\\dev\\stypendia\\client\\src\\pages\\home.js":"7","C:\\dev\\stypendia\\client\\src\\components\\Rodo.js":"8","C:\\dev\\stypendia\\client\\src\\components\\Title.js":"9","C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js":"10","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js":"11","C:\\dev\\stypendia\\client\\src\\context\\types.js":"12","C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js":"13","C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js":"14","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js":"15","C:\\dev\\stypendia\\client\\src\\pages\\verify.js":"16","C:\\dev\\stypendia\\client\\src\\context\\alert\\AlertState.js":"17","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertReducer.js":"18","C:\\dev\\stypendia\\client\\src\\pages\\resend.js":"19","C:\\dev\\stypendia\\client\\src\\pages\\resetSend.js":"20","C:\\dev\\stypendia\\client\\src\\pages\\reset.js":"21","C:\\dev\\stypendia\\client\\src\\pages\\logout.js":"22","C:\\dev\\stypendia\\client\\src\\pages\\changePass.js":"23","C:\\dev\\stypendia\\client\\src\\pages\\protectedRoute.js":"24","C:\\dev\\stypendia\\client\\src\\pages\\styles\\submit.styles.js":"25","C:\\dev\\stypendia\\client\\src\\components\\subALayout.js":"26","C:\\dev\\stypendia\\client\\src\\context\\submit\\submitState.js":"27","C:\\dev\\stypendia\\client\\src\\context\\submit\\submitContext.js":"28","C:\\dev\\stypendia\\client\\src\\context\\submit\\submitReducer.js":"29","C:\\dev\\stypendia\\client\\src\\pages\\styles\\newSubmit.styles.js":"30","C:\\dev\\stypendia\\client\\src\\pages\\styles\\home.styles.js":"31","C:\\dev\\stypendia\\client\\src\\components\\Nav.js":"32","C:\\dev\\stypendia\\client\\src\\components\\allUsersSubmits.js":"33","C:\\dev\\stypendia\\client\\src\\components\\AllUsersSubmits.js":"34","C:\\dev\\stypendia\\client\\src\\components\\AllUsersDrafts.js":"35","C:\\dev\\stypendia\\client\\src\\components\\NewCallToAction.js":"36","C:\\dev\\stypendia\\client\\src\\pages\\submit.js":"37","C:\\dev\\stypendia\\client\\src\\components\\submit\\subA_I_II.js":"38","C:\\dev\\stypendia\\client\\src\\components\\submit\\subA_III_IV.js":"39","C:\\dev\\stypendia\\client\\src\\components\\styles\\nav.styles.js":"40","C:\\dev\\stypendia\\client\\src\\context\\app\\appState.js":"41","C:\\dev\\stypendia\\client\\src\\context\\app\\appContext.js":"42","C:\\dev\\stypendia\\client\\src\\context\\app\\appReducer.js":"43","C:\\dev\\stypendia\\client\\src\\components\\styles\\alert.styles.js":"44","C:\\dev\\stypendia\\client\\src\\components\\styles\\mainMenu.styles.js":"45","C:\\dev\\stypendia\\client\\src\\components\\styles\\layout.styles.js":"46","C:\\dev\\stypendia\\client\\src\\components\\styles\\rodo.styles.js":"47","C:\\dev\\stypendia\\client\\src\\pages\\styles\\login.styles.js":"48","C:\\dev\\stypendia\\client\\src\\pages\\styles\\changePass.styles.js":"49","C:\\dev\\stypendia\\client\\src\\pages\\styles\\logout.styles.js":"50","C:\\dev\\stypendia\\client\\src\\pages\\styles\\register.styles.js":"51","C:\\dev\\stypendia\\client\\src\\pages\\styles\\resend.styles.js":"52","C:\\dev\\stypendia\\client\\src\\pages\\styles\\reset.styles.js":"53","C:\\dev\\stypendia\\client\\src\\pages\\styles\\resetSend.styles.js":"54","C:\\dev\\stypendia\\client\\src\\pages\\styles\\verify.styles.js":"55","C:\\dev\\stypendia\\client\\src\\components\\submit\\Attachments.js":"56","C:\\dev\\stypendia\\client\\src\\components\\styles\\attachments.styles.js":"57","C:\\dev\\stypendia\\client\\src\\components\\Timer.js":"58","C:\\dev\\stypendia\\client\\src\\components\\styles\\timer.styles.js":"59","C:\\dev\\stypendia\\client\\src\\services\\saveRollbar.js":"60","C:\\dev\\stypendia\\client\\src\\pages\\404.js":"61","C:\\dev\\stypendia\\client\\src\\parts\\items.js":"62","C:\\dev\\stypendia\\client\\src\\parts\\inputs.js":"63","C:\\dev\\stypendia\\client\\src\\parts\\options.js":"64","C:\\dev\\stypendia\\client\\src\\pages\\styles\\404.styles.js":"65","C:\\dev\\stypendia\\client\\src\\components\\index.js":"66","C:\\dev\\stypendia\\client\\src\\context\\index.js":"67","C:\\dev\\stypendia\\client\\src\\pages\\index.js":"68","C:\\dev\\stypendia\\client\\src\\parts\\index.js":"69"},{"size":220,"mtime":1608816802276,"results":"70","hashOfConfig":"71"},{"size":1915,"mtime":1611505100877,"results":"72","hashOfConfig":"71"},{"size":627,"mtime":1611270646044,"results":"73","hashOfConfig":"71"},{"size":2085,"mtime":1611486806344,"results":"74","hashOfConfig":"71"},{"size":4710,"mtime":1611504055312,"results":"75","hashOfConfig":"71"},{"size":5748,"mtime":1611504152021,"results":"76","hashOfConfig":"71"},{"size":1478,"mtime":1611504003439,"results":"77","hashOfConfig":"71"},{"size":4432,"mtime":1610315383171,"results":"78","hashOfConfig":"71"},{"size":792,"mtime":1608799587288,"results":"79","hashOfConfig":"71"},{"size":2572,"mtime":1611328069725,"results":"80","hashOfConfig":"71"},{"size":630,"mtime":1611270646048,"results":"81","hashOfConfig":"71"},{"size":759,"mtime":1611270646048,"results":"82","hashOfConfig":"71"},{"size":105,"mtime":1608848462800,"results":"83","hashOfConfig":"71"},{"size":3062,"mtime":1610320207805,"results":"84","hashOfConfig":"71"},{"size":109,"mtime":1609080271356,"results":"85","hashOfConfig":"71"},{"size":3934,"mtime":1611504465358,"results":"86","hashOfConfig":"71"},{"size":837,"mtime":1609111776421,"results":"87","hashOfConfig":"71"},{"size":359,"mtime":1609111873258,"results":"88","hashOfConfig":"71"},{"size":3720,"mtime":1611504212922,"results":"89","hashOfConfig":"71"},{"size":4400,"mtime":1611504322909,"results":"90","hashOfConfig":"71"},{"size":4161,"mtime":1611504282963,"results":"91","hashOfConfig":"71"},{"size":924,"mtime":1611504079751,"results":"92","hashOfConfig":"71"},{"size":4120,"mtime":1611503877142,"results":"93","hashOfConfig":"71"},{"size":650,"mtime":1611504095783,"results":"94","hashOfConfig":"71"},{"size":947,"mtime":1610026612898,"results":"95","hashOfConfig":"71"},{"size":748,"mtime":1609776209345,"results":"96","hashOfConfig":"71"},{"size":4574,"mtime":1610309908762,"results":"97","hashOfConfig":"71"},{"size":109,"mtime":1609777155673,"results":"98","hashOfConfig":"71"},{"size":803,"mtime":1610309592138,"results":"99","hashOfConfig":"71"},{"size":213,"mtime":1610210523611,"results":"100","hashOfConfig":"71"},{"size":635,"mtime":1611173262477,"results":"101","hashOfConfig":"71"},{"size":3174,"mtime":1611505477718,"results":"102","hashOfConfig":"71"},{"size":884,"mtime":1610049531415,"results":"103","hashOfConfig":"71"},{"size":4165,"mtime":1611505415458,"results":"104","hashOfConfig":"71"},{"size":2433,"mtime":1611505362110,"results":"105","hashOfConfig":"71"},{"size":1511,"mtime":1611505511812,"results":"106","hashOfConfig":"71"},{"size":2271,"mtime":1611504428836,"results":"107","hashOfConfig":"71"},{"size":7452,"mtime":1611505289321,"results":"108","hashOfConfig":"71"},{"size":8918,"mtime":1611505336865,"results":"109","hashOfConfig":"71"},{"size":389,"mtime":1610290764210,"results":"110","hashOfConfig":"71"},{"size":744,"mtime":1611349535149,"results":"111","hashOfConfig":"71"},{"size":103,"mtime":1610289759632,"results":"112","hashOfConfig":"71"},{"size":268,"mtime":1610290118206,"results":"113","hashOfConfig":"71"},{"size":2238,"mtime":1611260018029,"results":"114","hashOfConfig":"71"},{"size":317,"mtime":1610314827261,"results":"115","hashOfConfig":"71"},{"size":189,"mtime":1610315081054,"results":"116","hashOfConfig":"71"},{"size":239,"mtime":1610315325540,"results":"117","hashOfConfig":"71"},{"size":414,"mtime":1610317294859,"results":"118","hashOfConfig":"71"},{"size":420,"mtime":1610317926565,"results":"119","hashOfConfig":"71"},{"size":127,"mtime":1610317074882,"results":"120","hashOfConfig":"71"},{"size":525,"mtime":1610317742736,"results":"121","hashOfConfig":"71"},{"size":420,"mtime":1610318211002,"results":"122","hashOfConfig":"71"},{"size":420,"mtime":1610318415352,"results":"123","hashOfConfig":"71"},{"size":420,"mtime":1610318605095,"results":"124","hashOfConfig":"71"},{"size":553,"mtime":1610319320735,"results":"125","hashOfConfig":"71"},{"size":10061,"mtime":1611505226350,"results":"126","hashOfConfig":"71"},{"size":679,"mtime":1610919048581,"results":"127","hashOfConfig":"71"},{"size":1629,"mtime":1611505540085,"results":"128","hashOfConfig":"71"},{"size":141,"mtime":1611270646045,"results":"129","hashOfConfig":"71"},{"size":355,"mtime":1611354741327,"results":"130","hashOfConfig":"71"},{"size":445,"mtime":1611486806346,"results":"131","hashOfConfig":"71"},{"size":2581,"mtime":1611486806353,"results":"132","hashOfConfig":"71"},{"size":2661,"mtime":1611486806352,"results":"133","hashOfConfig":"71"},{"size":1674,"mtime":1611486806353,"results":"134","hashOfConfig":"71"},{"size":239,"mtime":1611486806351,"results":"135","hashOfConfig":"71"},{"size":741,"mtime":1611504405223,"results":"136","hashOfConfig":"71"},{"size":492,"mtime":1611505045998,"results":"137","hashOfConfig":"71"},{"size":588,"mtime":1611504870564,"results":"138","hashOfConfig":"71"},{"size":76,"mtime":1611505184277,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1cla2w0",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"142"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\stypendia\\client\\src\\index.js",[],["292","293"],"C:\\dev\\stypendia\\client\\src\\App.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\Layout.js",[],"C:\\dev\\stypendia\\client\\src\\components\\commonLayout\\MainMenu.js",["294"],"import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport {Wrapper} from '../styles/mainMenu.styles'\r\nimport { leftMenuItems, rightMenuItems } from '../../items';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n\r\nconst MainMenu = ({ history }) => {\r\n\r\n\r\n  const [activeItem, setActiveItem] = useState('home');\r\n  const [hasOwnSub, setHasOwnSub] = useState(false);\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, logOut } = authContext;\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Menu icon='labeled' className='main'>\r\n        {leftMenuItems\r\n          .filter(\r\n            (item) =>\r\n              (item.noOwnSubDisplay === !hasOwnSub ||\r\n                item.hasOwnSubDisplay === hasOwnSub) &&\r\n              item.isLoggedInDisplay === isLoggedIn\r\n          )\r\n          .map((item) => (\r\n            <Link to={item.url} key={item.id}>\r\n              <Menu.Item\r\n                as='div'\r\n                icon={item.icon}\r\n                content={item.title}\r\n                name={item.name}\r\n                active={activeItem === item.name}\r\n                onClick={() => setActiveItem(item.name)}\r\n              />\r\n            </Link>\r\n          ))}\r\n\r\n        <Menu.Menu position='right' className='right'>\r\n          {rightMenuItems\r\n            .filter((item) => item.isLoggedInDisplay === isLoggedIn)\r\n            .map((item) => (\r\n              <Link to={item.url} key={item.id}>\r\n                <Menu.Item\r\n                  as='div'\r\n                  icon={item.icon}\r\n                  content={item.title}\r\n                  name={item.name}\r\n                  active={activeItem === item.name}\r\n                  onClick={() => {\r\n                    item.name === 'logout'\r\n                      ? logOut()\r\n                      : setActiveItem(item.name);\r\n                  }}\r\n                />\r\n              </Link>\r\n            ))}\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default MainMenu;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\login.js",["295","296"],"import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { Wrapper } from './styles/login.styles';\r\nimport {Title} from '../components';\r\nimport {AlertContext, AppContext,AuthContext} from '../context';\r\nimport { loginInputs } from '../parts/inputs';\r\n\r\nconst Login = ({ history }) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading, saveRollbar } = appContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    isLoggedIn && history.push('/');\r\n  }, [isLoggedIn]);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    const newBody = { ...body, _csrf: csrfData.data.csrfToken };\r\n\r\n    axios\r\n      .post(`/api/v1/users/login`, newBody)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          setIsLoading(false);\r\n          // saveRollbar(data.data);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // saveRollbar({ err: err.response.data.message, page: 'login' });\r\n        if (err.response?.data?.forcePassChange) {\r\n          addAlert(err.response.data);\r\n          setIsLoading(false);\r\n          history.push(\r\n            `/reset?id=${err.response.data.resetId}&token=${err.response.data.token}`\r\n          );\r\n\r\n          return;\r\n        }\r\n\r\n        if (err.response?.data?.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response?.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Title content='Logowanie' />\r\n        <Segment placeholder className='main' size='large'>\r\n          <Grid columns={2} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <input type='hidden' name='_csrf' value='_csrf'></input>\r\n                {loginInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        className='input'\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n\r\n                      {errors && errors[input.name] && (\r\n                        <Label\r\n                          basic\r\n                          color='red'\r\n                          pointing='above'\r\n                          key={input.id}\r\n                          className='small'\r\n                        >\r\n                          {errors[input.name]}\r\n                        </Label>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <span>{}</span>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Zaloguj się'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                />\r\n              </Form>\r\n              <Link to='/resetsend'>\r\n                <div className='buttonWrapper'>\r\n                  <div className='span'>Zapomniałeś hasła?</div>\r\n                  <Button content='Resetuj hasło' icon='recycle' size='mini' />\r\n                </div>\r\n              </Link>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column verticalAlign='middle'>\r\n              <Link to='/register'>\r\n                <Button content='Zarejestruj się' icon='user plus' size='big' />\r\n              </Link>\r\n            </Grid.Column>\r\n          </Grid>\r\n\r\n          <Divider vertical>lub</Divider>\r\n        </Segment>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\register.js",["297"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { Wrapper } from './styles/register.styles';\r\nimport {Rodo,Title}  from '../components';\r\nimport { registerInputs } from '../parts/inputs';\r\nimport {AlertContext, AppContext,AuthContext } from '../context';\r\n\r\nconst Register = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading } = appContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && props.history.push('/');\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n  const [isRodoChecked, setIsRodoChecked] = useState(false);\r\n  const [isRegulationsChecked, setIsRegulationsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    setIsLoading(true);\r\n    const newBody = { ...body, _csrf: csrfData.data.csrfToken };\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_ORIGIN}/api/v1/users`, newBody)\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          setIsLoading(false);\r\n          setTimeout(() => props.history.push('/login'), 1500);\r\n          addAlert(data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        setErrors(err.response.data);\r\n        addAlert(err.response.data);\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className='main'>\r\n        <Title content='Dodawanie konta' />\r\n        <Segment placeholder size='large'>\r\n          <Grid columns={2} relaxed='very' stackable>\r\n            <Grid.Column textAlign='left' verticalAlign='middle'>\r\n              <Header textAlign='center'>\r\n                Potwierdź niezbędne oświadczenia\r\n              </Header>\r\n\r\n              <Checkbox\r\n                onChange={() => setIsRegulationsChecked(!isRegulationsChecked)}\r\n                // value={isRegulationsChecked}\r\n                checked={isRegulationsChecked}\r\n                label={\r\n                  <label>\r\n                    Oświadczam, iż zapoznałam/em się z regulaminem i akceptuję\r\n                    jego postanowienia <span>*</span>\r\n                  </label>\r\n                }\r\n              />\r\n\r\n              <Rodo />\r\n\r\n              <Checkbox\r\n                onChange={() => setIsRodoChecked(!isRodoChecked)}\r\n                // value={isRodoChecked}\r\n                checked={isRodoChecked}\r\n                className='checkBox'\r\n                required\r\n                label={\r\n                  <label>\r\n                    Oświadczam, iż zapoznałam/em się z powyższą informacją\r\n                    <span> *</span>\r\n                  </label>\r\n                }\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Container>\r\n                <Header>... podaj swoje dane</Header>\r\n                <Form>\r\n                  <input type='hidden' name='_csrf' value='_csrf'></input>\r\n                  {registerInputs.map((input) => {\r\n                    return (\r\n                      <div key={input.id}>\r\n                        <Form.Input\r\n                          loading={isLoading}\r\n                          onChange={(e) => handleOnChange(e)}\r\n                          required\r\n                          className='input'\r\n                          icon={input.icon}\r\n                          iconPosition='left'\r\n                          label={input.label}\r\n                          placeholder={input.placeholder}\r\n                          type={input.type}\r\n                          name={input.name}\r\n                        />\r\n                        {errors && errors[input.name] && (\r\n                          <Label\r\n                            basic\r\n                            color='red'\r\n                            pointing='above'\r\n                            key={input.id}\r\n                            className='small'\r\n                          >\r\n                            {errors[input.name]}\r\n                          </Label>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <Button\r\n                    loading={isLoading}\r\n                    type='submit'\r\n                    content='Zarejestruj się'\r\n                    primary\r\n                    size='large'\r\n                    onClick={handleOnClick}\r\n                    disabled={\r\n                      !isRegulationsChecked || !isRodoChecked ? true : false\r\n                    }\r\n                  />\r\n                </Form>\r\n                <Link to='/login'>\r\n                  <div className='buttonWrapper'>\r\n                    <div className='span'>Masz już konto?</div>\r\n                    <Button content='Zaloguj się' icon='user' size='mini' />\r\n                  </div>\r\n                </Link>\r\n              </Container>\r\n            </Grid.Column>\r\n          </Grid>\r\n\r\n          <Divider vertical>oraz</Divider>\r\n        </Segment>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\home.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Rodo.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Title.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\AuthState.js",["298"],"import React, { useContext, useEffect, useReducer } from 'react';\r\nimport authReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\nimport axios from 'axios';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport {\r\n  SET_USER,\r\n  CHECK_IS_LOGGED_IN,\r\n  LOGOUT_USER,\r\n  RESET_TIME_LEFT,\r\n  SET_TIME,\r\n} from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const initialState = {\r\n    user: null,\r\n    timeLeft: +process.env.REACT_APP_SESSION_TIMEOUT,\r\n    isLoggedIn: false,\r\n  };\r\n\r\n  const checkIsAuthenticated = async () => {\r\n    const result = await (\r\n      await fetch('http://localhost:5003/api/v1/users/me', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n    ).json();\r\n    result.resStatus === 'success' ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n    setUser(result.user);\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const setUser = (user) => {\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const setIsLoggedIn = (is) => {\r\n    dispatch({\r\n      type: CHECK_IS_LOGGED_IN,\r\n      payload: is,\r\n    });\r\n  };\r\n\r\n  const resetTimeLeft = () => {\r\n    dispatch({\r\n      type: RESET_TIME_LEFT,\r\n    });\r\n  };\r\n\r\n  const setTimeLeft = (time) => {\r\n\r\n    dispatch({\r\n      type: SET_TIME,\r\n      payload: time\r\n    });\r\n  };\r\n\r\n  const logOut = () => {\r\n    axios\r\n      .get('/api/v1/users/logout')\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          await props?.history?.push('/login');\r\n        }\r\n\r\n        dispatch({\r\n          type: LOGOUT_USER,\r\n        });\r\n      })\r\n      .catch(\r\n        (err) => console.log(err.message)\r\n        //   if (err.response.data.alertTitle) {\r\n        //     console.log(err.response.data);\r\n\r\n        //     addAlert(err.response.data);\r\n        //   }\r\n        // });\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        setUser,\r\n        logOut,\r\n        checkIsAuthenticated,\r\n        isLoggedIn: state.isLoggedIn,\r\n        timeLeft: state.timeLeft,\r\n        resetTimeLeft,\r\n        setTimeLeft\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","C:\\dev\\stypendia\\client\\src\\context\\auth\\authReducer.js",[],"C:\\dev\\stypendia\\client\\src\\context\\types.js",[],"C:\\dev\\stypendia\\client\\src\\context\\auth\\authContext.js",[],"C:\\dev\\stypendia\\client\\src\\components\\alert\\Alert.js",["299"],"import React, { useContext } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport { Wrapper } from '../styles/alert.styles';\r\n// import './Alert.css';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alerts, deleteAlert } = alertContext;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className={`notification-container ${props.position}`}>\r\n        {alerts.map((alert, i) => {\r\n          if (props.autoDeleteInterval) {\r\n            setInterval(() => {\r\n              deleteAlert(alert.id);\r\n            }, props.autoDeleteInterval);\r\n          }\r\n\r\n          switch (alert.resStatus) {\r\n            case 'error':\r\n              return (\r\n                <div key={alert.id} className={`${props.position}`}>\r\n                  <Message error className='toast'>\r\n                    <Message.Header className='notification-title'>\r\n                      {alert.alertTitle}\r\n                    </Message.Header>\r\n                    <Message.Content className='notification-message'>\r\n                      <p> {alert.msgPL}</p>\r\n                    </Message.Content>\r\n                  </Message>\r\n                </div>\r\n              );\r\n            case 'info':\r\n              return (\r\n                <div key={alert.id} className={`${props.position}`}>\r\n                  <Message info className='toast'>\r\n                    <Message.Header className='notification-title'>\r\n                      {alert.alertTitle}\r\n                    </Message.Header>\r\n                    <Message.Content className='notification-message'>\r\n                      <p> {alert.msgPL}</p>\r\n                    </Message.Content>\r\n                  </Message>\r\n                </div>\r\n              );\r\n\r\n            case 'warning':\r\n              return (\r\n                <div key={alert.id} className={`${props.position}`}>\r\n                  <Message warning className='toast'>\r\n                    <Message.Header className='notification-title'>\r\n                      {alert.alertTitle}\r\n                    </Message.Header>\r\n                    <Message.Content className='notification-message'>\r\n                      <p> {alert.msgPL}</p>\r\n                    </Message.Content>\r\n                  </Message>\r\n                </div>\r\n              );\r\n\r\n            case 'success':\r\n              return (\r\n                <div key={alert.id} className={`${props.position}`}>\r\n                  <Message success className='toast'>\r\n                    <Message.Header className='notification-title'>\r\n                      {alert.alertTitle}\r\n                    </Message.Header>\r\n                    <Message.Content className='notification-message'>\r\n                      <p > {alert.msgPL}</p>\r\n                    </Message.Content>\r\n                  </Message>\r\n                </div>\r\n              );\r\n\r\n            default:\r\n              break;\r\n          }\r\n        })}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","C:\\dev\\stypendia\\client\\src\\context\\alert\\alertContext.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\verify.js",["300","301"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {AlertContext,AuthContext, AppContext} from '../context';\r\nimport { Link } from 'react-router-dom';\r\nimport { verItems } from '../parts/items';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Icon,\r\n  List,\r\n  Loader,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\n\r\nimport {Wrapper} from './styles/verify.styles'\r\nimport Title from '../components/Title';\r\n\r\nconst Verify = ({ location: { search }, history }) => {\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading } = appContext;\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { checkIsAuthenticated, isLoggedIn } = authContext;\r\n  isLoggedIn && history.push('/');\r\n\r\n  const [query, setQuery] = useState(search);\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n\r\n    axios\r\n      .post(`/api/v1/email/verify${query}`)\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        setIsSuccess(true);\r\n        addAlert(data.data);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        addAlert(err.response.data);\r\n      });\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title content='Weryfikacja konta' />\r\n      <Loader active={isLoading} size='huge'>\r\n        Weryfikujemy\r\n      </Loader>\r\n\r\n      {!isLoading && !isSuccess && (\r\n        <Container className='msg'>\r\n          <Message error size='big' floating>\r\n            <Message.Header>Błąd weryfikacji danych</Message.Header>\r\n            <p>\r\n              Nie udało się potwierdzić konta przy użyciu tego linka. Być może\r\n              link jest już przestarzały lub uszkodzony. Możesz skorzystać z\r\n              mechanizmu ponownej wysyłki linka korzystając z tej strony:\r\n              <br />\r\n              <br />\r\n              <Link to='/resend'>\r\n                <Button primary size='large'>\r\n                  Ponownie wyślij link\r\n                </Button>\r\n              </Link>\r\n            </p>\r\n          </Message>\r\n        </Container>\r\n      )}\r\n\r\n      {!isLoading && isSuccess && (\r\n        <>\r\n          <Segment placeholder className='main' size='large'>\r\n            <Message success size='medium' floating>\r\n              <Message.Header>Potwierdzono konto!!!</Message.Header>\r\n              <p>\r\n                Udało się potwierdzić konto. Od tej chili możesz się zalogować i\r\n                złożyć wniosek.\r\n              </p>\r\n            </Message>\r\n\r\n            <List\r\n              size='large'\r\n              selection\r\n              animated\r\n              divided\r\n              verticalAlign='middle'\r\n              hor\r\n            >\r\n              {verItems.map((item) => (\r\n                <List.Item key={item.id}>\r\n                  <Link to={item.to}>\r\n                    <List.Content floated='right'>\r\n                      <Button\r\n                        size={item.button === 'Logowanie' ? 'big' : null}\r\n                        primary={item.button === 'Logowanie'}\r\n                        icon\r\n                        labelPosition='right'\r\n                      >\r\n                        {item.button}\r\n                        <Icon name='right arrow' />\r\n                      </Button>\r\n                    </List.Content>\r\n                    <List.Content verticalAlign='bottom' floated='left'>\r\n                      <Header as='h3' className='itemheader'>\r\n                        <Icon size='large' name={item.icon} /> {item.name}\r\n                      </Header>\r\n                    </List.Content>\r\n                  </Link>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Segment>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Verify;\r\n","C:\\dev\\stypendia\\client\\src\\context\\alert\\AlertState.js",[],"C:\\dev\\stypendia\\client\\src\\context\\alert\\alertReducer.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\resend.js",["302"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\n\r\nimport { Wrapper } from './styles/resend.styles';\r\nimport {Title} from '../components';\r\nimport {AlertContext, AuthContext,AppContext} from '../context';\r\n\r\nconst Resend = ({ history }) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading } = appContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n\r\n  const [email, setEmail] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    isLoggedIn && history.push('/');\r\n  }, [isLoggedIn]);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    const newBody = { email, _csrf: csrfData.data.csrfToken };\r\n    axios\r\n      .post(`/api/v1/email/resend`, newBody)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          setUser(data.data.user);\r\n          await setIsLoading(false);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Title content='Potwierdzanie konta' />\r\n        <Segment placeholder className='main' size='large'>\r\n          <Message className='msg' info size='small' floating>\r\n            <Message.Header>\r\n              Ponowne wysłanie linka do potwierdzenia konta\r\n            </Message.Header>\r\n            <p>\r\n              Strona służy do ponownego wysłania linka potwierdzającego konto,\r\n              jeżeli konto już założyłaś/eś, ale nie skorzystałaś/eś z niego w\r\n              odpowiednim czasie. Link zostanie przesłany na podany adres email\r\n              i będzie ważny przez <strong>12 godzin</strong> . Jeżeli nie\r\n              znajdziesz linka sprawdź folder <strong> spam</strong> w Twojej\r\n              poczcie.\r\n            </p>\r\n          </Message>\r\n          <Grid columns={1} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <input type='hidden' name='_csrf' value=''></input>\r\n                <Form.Input\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  className='input'\r\n                  icon='mail'\r\n                  iconPosition='left'\r\n                  label='Email'\r\n                  placeholder='Podaj email'\r\n                  type='email'\r\n                  name='email'\r\n                />\r\n\r\n                {errors && errors.email && (\r\n                  <Label basic color='red' pointing='above' className='small'>\r\n                    {errors.email}\r\n                  </Label>\r\n                )}\r\n\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Wyślij link'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Resend;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\resetSend.js",["303"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport {Wrapper} from './styles/resetSend.styles'\r\nimport {Title} from '../components';\r\nimport {AlertContext,AuthContext ,AppContext} from '../context';\r\nimport { resetReqInputs } from '../parts/inputs';\r\n\r\nconst ResetSend = ({ history }) => {\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading } = appContext;\r\n\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    isLoggedIn && history.push('/');\r\n  }, [isLoggedIn]);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    const newBody = { ...body, _csrf: csrfData.data.csrfToken };\r\n\r\n    axios\r\n      .post(`/api/v1/password/email`, newBody)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          setUser(data.data.user);\r\n          await setIsLoading(false);\r\n          history.push('/login');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n \r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n    const handleOnChange = (e) => {\r\n      e.preventDefault();\r\n      setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n    };\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Title content='Resetowanie hasła' />\r\n        <Segment placeholder className='main' size='large'>\r\n          <Message className='msg' info size='small' floating>\r\n            <Message.Header>Resetowanie hasła</Message.Header>\r\n            <p>\r\n              Strona służy do resetowania hasła do konta. Zostanie wygenerowany\r\n              specjalny link oraz przesłany na podany adres email i będzie ważny\r\n              przez <strong>12 godzin</strong>. Jeżeli nie znajdziesz linka\r\n              sprawdź folder <strong> spam</strong> w Twojej poczcie. W\r\n              formularzu poniżej podaj nazwę użytkownika oraz email, które\r\n              podałaś/eś w trakcie rejestracji.\r\n            </p>\r\n          </Message>\r\n          <Grid columns={1} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <input type='hidden' name='_csrf' value=''></input>\r\n                {resetReqInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        className='input'\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n\r\n                      {errors && errors[input.name] && (\r\n                        <Label\r\n                          basic\r\n                          color='red'\r\n                          pointing='above'\r\n                          key={input.id}\r\n                          className='small'\r\n                        >\r\n                          {errors[input.name]}\r\n                        </Label>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Wyślij link'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default ResetSend;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\reset.js",["304"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport {Wrapper} from './styles/reset.styles'\r\nimport {Title} from '../components';\r\nimport {AlertContext,AuthContext , AppContext}from '../context';\r\nimport { resetInputs } from '../parts/inputs';\r\n\r\nconst Reset = ({ location, history }) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { setIsLoading, isLoading } = appContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { setUser, checkIsAuthenticated, isLoggedIn } = authContext;\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    checkIsAuthenticated();\r\n    isLoggedIn && history.push('/');\r\n  }, [isLoggedIn]);\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    const newBody = { ...body, _csrf: csrfData.data.csrfToken };\r\n\r\n    axios\r\n      .post(`/api/v1/password/reset${location.search}`, newBody)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          setUser(data.data.user);\r\n          await setIsLoading(false);\r\n          history.push('/login');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n   \r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Title content='Nowe hasło' />\r\n        <Segment placeholder className='main' size='large'>\r\n          <Message className='msg' info size='small' floating>\r\n            <Message.Header>Nowe hasło</Message.Header>\r\n            <p>\r\n              Strona służy do nadawania nowego hasła. Podaj niezbędne dane i\r\n              zapisz zmiany. Pamiętaj, aby nowe hasło posiadało co najmniej 1\r\n              wielką literę, 1 małą oraz 1 cyfrę.\r\n            </p>\r\n          </Message>\r\n          <Grid columns={1} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <input type='hidden' name='_csrf' value=''></input>\r\n                {resetInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        className='input'\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n\r\n                      {errors && errors[input.name] && (\r\n                        <Label\r\n                          basic\r\n                          color='red'\r\n                          pointing='above'\r\n                          key={input.id}\r\n                          className='small'\r\n                        >\r\n                          {errors[input.name]}\r\n                        </Label>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Zapisz nowe hasło'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Reset;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\logout.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\changePass.js",["305"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Grid,\r\n  Label,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { Wrapper } from './styles/changePass.styles';\r\nimport Title from '../components/Title';\r\nimport {AlertContext,AppContext,AuthContext} from '../context';\r\nimport { changePassInputs } from '../parts/inputs';\r\n\r\nconst ChangePass = ({ history }) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { resetTimeLeft } = authContext;\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading, isLoading } = appContext;\r\n\r\n  const [body, setBody] = useState({});\r\n  const [errors, setErrors] = useState('');\r\n\r\n  const handleOnClick = async (e) => {\r\n    e.preventDefault();\r\n    const csrfData = await axios.get('/api/v1/csrf');\r\n    setIsLoading(true);\r\n    const newBody = { ...body, _csrf: csrfData.data.csrfToken };\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    axios\r\n      .post(`/api/v1/changepass`, newBody, headers)\r\n      .then(async (data) => {\r\n        if (data.data.resStatus || data.data.resStatus === 'success') {\r\n          addAlert(data.data);\r\n          await setIsLoading(false);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.alertTitle) {\r\n          setIsLoading(false);\r\n          addAlert(err.response.data);\r\n        }\r\n\r\n        setErrors(err.response.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    setBody((prevBody) => ({ ...prevBody, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n    useEffect(() => {\r\n      resetTimeLeft();\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Title content='Zmiana hasła' />\r\n        <Segment placeholder className='main' size='large'>\r\n          <Message className='msg' info size='small' floating>\r\n            <Message.Header>Zmiana hasła</Message.Header>\r\n            <p>\r\n              Strona służy do zmiany hasła. Podaj obowiązujące i nowe hasło i\r\n              zapisz zmiany. Pamiętaj, aby nowe hasło posiadało co najmniej 1\r\n              wielką literę, 1 małą oraz 1 cyfrę.\r\n            </p>\r\n          </Message>\r\n          <Grid columns={1} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <input type='hidden' name='_csrf' value=''></input>\r\n                {changePassInputs.map((input) => {\r\n                  return (\r\n                    <div key={input.id}>\r\n                      <Form.Input\r\n                        onChange={(e) => handleOnChange(e)}\r\n                        required\r\n                        className='input'\r\n                        icon={input.icon}\r\n                        iconPosition='left'\r\n                        label={input.label}\r\n                        placeholder={input.placeholder}\r\n                        type={input.type}\r\n                        name={input.name}\r\n                      />\r\n\r\n                      {errors && errors[input.name] && (\r\n                        <Label\r\n                          basic\r\n                          color='red'\r\n                          pointing='above'\r\n                          key={input.id}\r\n                          className='small'\r\n                        >\r\n                          {errors[input.name]}\r\n                        </Label>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <Button\r\n                  loading={isLoading}\r\n                  type='submit'\r\n                  content='Zmień hasło'\r\n                  primary\r\n                  size='large'\r\n                  onClick={handleOnClick}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChangePass;\r\n","C:\\dev\\stypendia\\client\\src\\pages\\protectedRoute.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\submit.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\subALayout.js",["306","307"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { Wrapper } from '../pages/styles/submit.styles';\r\nimport Title from './Title';\r\n\r\nconst SubALayout = ({ children, leadHeader }) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title content='Nowy wniosek' />\r\n        <Wrapper>\r\n          <Segment placeholder size='large'>\r\n            <Label attached='top'>\r\n              <Header>{leadHeader}</Header>\r\n            </Label>\r\n            <Grid\r\n              className='container'\r\n              centered\r\n              columns={2}\r\n              relaxed='very'\r\n              stackable\r\n            >\r\n              {children}\r\n            </Grid>\r\n          </Segment>\r\n        </Wrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubALayout;\r\n","C:\\dev\\stypendia\\client\\src\\context\\submit\\submitState.js",["308"],"import React, { useContext, useReducer, useState } from 'react';\r\n\r\nimport submitReducer from './submitReducer';\r\nimport SubmitContext from './submitContext';\r\nimport axios from 'axios';\r\nimport AlertContext from '../alert/alertContext';\r\nimport AppContext from '../app/appContext';\r\n\r\nimport {\r\n  UPDATE_NEW_SUBMIT,\r\n  SET_SUBMIT_ID,\r\n  SET_SUBMIT_MODE,\r\n  UPDATE_CUR_SUBMIT,\r\n  SET_SUBMIT_TO_WATCH,\r\n  SET_CUR_SUBMIT,\r\n} from '../types';\r\n\r\nconst SubmitState = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { addAlert } = alertContext;\r\n\r\n  const appContext = useContext(AppContext);\r\n  const { setIsLoading } = appContext;\r\n\r\n  const initialState = {\r\n    newSubmit: {},\r\n    submitUuid: null,\r\n    isSaving: false,\r\n    submitMode: '',\r\n    submitToWatch: {},\r\n    curSubmit: {}, //submit being edited\r\n  };\r\n\r\n  // const addNewSubmit = (submit) => {\r\n  //   setIsLoading(true);\r\n  //   const headers = {\r\n  //     'Content-Type': 'application/json',\r\n  //   };\r\n\r\n  //   axios\r\n  //     .post('/api/v1/submits', submit, headers)\r\n  //     .then((data) => {\r\n  //       if (data.data.resStatus || data.data.resStatus === 'success') {\r\n  //         addAlert(data.data);\r\n  //       }\r\n  //       setIsLoading(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       if (err.response) {\r\n  //         console.log(err.response.data);\r\n  //         addAlert(err.response.data);\r\n  //         setIsLoading(false);\r\n\r\n  //         return;\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  // const updateSubmit = (submit) => {\r\n  //   setIsLoading(true);\r\n  //   const headers = {\r\n  //     'Content-Type': 'application/json',\r\n  //   };\r\n\r\n  //   axios\r\n  //     .put('/api/v1/submits', submit, headers)\r\n  //     .then( async(data) => {\r\n\r\n  //       if (data.data.resStatus || data.data.resStatus === 'success') {\r\n\r\n  //         addAlert(data.data);\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       if (err.response) {\r\n  //         addAlert(err.response.data);\r\n  //         setIsLoading(false);\r\n  //\r\n  //         return;\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  const [state, dispatch] = useReducer(submitReducer, initialState);\r\n\r\n  const updateNewSubmit = (newSubmit) => {\r\n    dispatch({\r\n      type: UPDATE_NEW_SUBMIT,\r\n      payload: newSubmit,\r\n    });\r\n  };\r\n\r\n  const updateCurSubmit = (curSubmit) => {\r\n    dispatch({\r\n      type: UPDATE_CUR_SUBMIT,\r\n      payload: curSubmit,\r\n    });\r\n  };\r\n\r\n  const setSubmitMode = (mode) => {\r\n    dispatch({\r\n      type: SET_SUBMIT_MODE,\r\n      payload: mode,\r\n    });\r\n  };\r\n\r\n  const setSubmitUuid = async (id) => {\r\n    await dispatch({\r\n      type: SET_SUBMIT_ID,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const setSubmitToWatch = (uuid) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n\r\n      axios\r\n        .get(`/api/v1/submits/usersubmits/${uuid}`, headers)\r\n        .then((data) => {\r\n          dispatch({\r\n            type: SET_SUBMIT_TO_WATCH,\r\n            payload: data.data.submit,\r\n          });\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            addAlert(err.response.data);\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const setCurSubmit = (uuid) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      axios\r\n        .get(`/api/v1/submits/usersubmits/${uuid}`, headers)\r\n        .then((data) => {\r\n          dispatch({\r\n            type: SET_CUR_SUBMIT,\r\n            payload: data.data.submit,\r\n          });\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            addAlert(err.response.data);\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SubmitContext.Provider\r\n      value={{\r\n        newSubmit: state.newSubmit,\r\n        updateNewSubmit,\r\n        setSubmitUuid,\r\n        submitUuid: state.submitUuid,\r\n        setSubmitMode,\r\n        curSubmit: state.curSubmit,\r\n        updateCurSubmit,\r\n        setCurSubmit,\r\n        submitMode: state.submitMode,\r\n        submitToWatch: state.submitToWatch,\r\n        setSubmitToWatch,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SubmitContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SubmitState;\r\n","C:\\dev\\stypendia\\client\\src\\context\\submit\\submitContext.js",[],"C:\\dev\\stypendia\\client\\src\\context\\submit\\submitReducer.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\newSubmit.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\home.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Nav.js",["309"],"C:\\dev\\stypendia\\client\\src\\components\\allUsersSubmits.js",["310","311","312","313"],"C:\\dev\\stypendia\\client\\src\\components\\AllUsersSubmits.js",["314"],"C:\\dev\\stypendia\\client\\src\\components\\AllUsersDrafts.js",["315"],"C:\\dev\\stypendia\\client\\src\\components\\NewCallToAction.js",["316"],"C:\\dev\\stypendia\\client\\src\\pages\\submit.js",["317","318","319","320","321"],"import React, { useState } from 'react';\r\nimport { Grid, Menu} from 'semantic-ui-react';\r\n\r\nimport {SubA_I_II,SubA_III_IV,Attachments,Nav } from '../components';\r\nimport { Wrapper } from './styles/newSubmit.styles';\r\n\r\nconst Submit = () => {\r\n  const [activeItem, setActiveItem] = useState(1);\r\n\r\n\r\n\r\n  const renderComponent = () => {\r\n    if (activeItem>5) setActiveItem(1)\r\n    if (activeItem<1) setActiveItem(1)\r\n    switch (activeItem) {\r\n      case 1:\r\n        return <SubA_I_II />;\r\n      case 2:\r\n        return <SubA_III_IV />;\r\n      case 3:\r\n        return <Attachments />;\r\n      case 4:\r\n        return <SubA_III_IV />;\r\n      case 5:\r\n        return <SubA_III_IV />;\r\n\r\n      default:\r\n        return <SubA_I_II />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Menu fluid vertical tabular>\r\n            <Menu.Item\r\n              icon='student'\r\n              name='Dane ucznia'\r\n              active={activeItem === 1}\r\n              onClick={() => setActiveItem(1)}\r\n            />\r\n            <Menu.Item\r\n              icon='university'\r\n              name='dane szkoły'\r\n              content='Dane szkoły'\r\n              active={activeItem === 2}\r\n              onClick={() => setActiveItem(2)}\r\n            />\r\n            <Menu.Item\r\n              icon='attach'\r\n              name='dane szkoły'\r\n              content='Załączniki'\r\n              active={activeItem === 3}\r\n              onClick={() => setActiveItem(3)}\r\n            />\r\n            <Menu.Item\r\n              icon='university'\r\n              name='dane szkoły'\r\n              content='Dane szkoły'\r\n              active={activeItem === 4}\r\n              onClick={() => setActiveItem(4)}\r\n            />\r\n            <Menu.Item\r\n              icon='university'\r\n              name='dane szkoły'\r\n              content='Dane szkoły'\r\n              active={activeItem === 5}\r\n              onClick={() => setActiveItem(5)}\r\n            />\r\n          </Menu>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column stretched width={12}>\r\n          {renderComponent()}\r\n        </Grid.Column>\r\n        <Nav activeItem={activeItem} setActiveItem={setActiveItem} />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Submit;\r\n","C:\\dev\\stypendia\\client\\src\\components\\submit\\subA_I_II.js",["322"],"C:\\dev\\stypendia\\client\\src\\components\\submit\\subA_III_IV.js",["323"],"C:\\dev\\stypendia\\client\\src\\components\\styles\\nav.styles.js",[],"C:\\dev\\stypendia\\client\\src\\context\\app\\appState.js",[],"C:\\dev\\stypendia\\client\\src\\context\\app\\appContext.js",[],"C:\\dev\\stypendia\\client\\src\\context\\app\\appReducer.js",[],"C:\\dev\\stypendia\\client\\src\\components\\styles\\alert.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\styles\\mainMenu.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\styles\\layout.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\styles\\rodo.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\login.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\changePass.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\logout.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\register.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\resend.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\reset.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\resetSend.styles.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\verify.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\submit\\Attachments.js",["324"],"C:\\dev\\stypendia\\client\\src\\components\\styles\\attachments.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\Timer.js",["325"],"C:\\dev\\stypendia\\client\\src\\components\\styles\\timer.styles.js",[],"C:\\dev\\stypendia\\client\\src\\services\\saveRollbar.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\404.js",[],"C:\\dev\\stypendia\\client\\src\\parts\\items.js",[],"C:\\dev\\stypendia\\client\\src\\parts\\inputs.js",[],"C:\\dev\\stypendia\\client\\src\\parts\\options.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\styles\\404.styles.js",[],"C:\\dev\\stypendia\\client\\src\\components\\index.js",[],"C:\\dev\\stypendia\\client\\src\\context\\index.js",[],"C:\\dev\\stypendia\\client\\src\\pages\\index.js",[],"C:\\dev\\stypendia\\client\\src\\parts\\index.js",[],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":13,"column":21,"nodeType":"332","messageId":"333","endLine":13,"endColumn":33},{"ruleId":"330","severity":1,"message":"334","line":24,"column":36,"nodeType":"332","messageId":"333","endLine":24,"endColumn":47},{"ruleId":"335","severity":1,"message":"336","line":35,"column":6,"nodeType":"337","endLine":35,"endColumn":18,"suggestions":"338"},{"ruleId":"335","severity":1,"message":"339","line":38,"column":6,"nodeType":"337","endLine":38,"endColumn":8,"suggestions":"340"},{"ruleId":"335","severity":1,"message":"339","line":95,"column":6,"nodeType":"337","endLine":95,"endColumn":8,"suggestions":"341"},{"ruleId":"342","severity":1,"message":"343","line":14,"column":32,"nodeType":"344","messageId":"345","endLine":14,"endColumn":34},{"ruleId":"330","severity":1,"message":"346","line":33,"column":17,"nodeType":"332","messageId":"333","endLine":33,"endColumn":25},{"ruleId":"335","severity":1,"message":"347","line":49,"column":6,"nodeType":"337","endLine":49,"endColumn":18,"suggestions":"348"},{"ruleId":"335","severity":1,"message":"336","line":33,"column":6,"nodeType":"337","endLine":33,"endColumn":18,"suggestions":"349"},{"ruleId":"335","severity":1,"message":"336","line":35,"column":6,"nodeType":"337","endLine":35,"endColumn":18,"suggestions":"350"},{"ruleId":"335","severity":1,"message":"336","line":34,"column":6,"nodeType":"337","endLine":34,"endColumn":18,"suggestions":"351"},{"ruleId":"335","severity":1,"message":"352","line":65,"column":8,"nodeType":"337","endLine":65,"endColumn":10,"suggestions":"353"},{"ruleId":"330","severity":1,"message":"354","line":5,"column":3,"nodeType":"332","messageId":"333","endLine":5,"endColumn":9},{"ruleId":"330","severity":1,"message":"355","line":6,"column":3,"nodeType":"332","messageId":"333","endLine":6,"endColumn":8},{"ruleId":"330","severity":1,"message":"356","line":1,"column":41,"nodeType":"332","messageId":"333","endLine":1,"endColumn":49},{"ruleId":"335","severity":1,"message":"352","line":73,"column":6,"nodeType":"337","endLine":73,"endColumn":8,"suggestions":"357"},{"ruleId":"358","severity":2,"message":"359","line":8,"column":24,"nodeType":"332","endLine":8,"endColumn":34},{"ruleId":"358","severity":2,"message":"359","line":12,"column":23,"nodeType":"332","endLine":12,"endColumn":33},{"ruleId":"330","severity":1,"message":"360","line":15,"column":9,"nodeType":"332","messageId":"333","endLine":15,"endColumn":15},{"ruleId":"330","severity":1,"message":"361","line":16,"column":9,"nodeType":"332","messageId":"333","endLine":16,"endColumn":27},{"ruleId":"335","severity":1,"message":"362","line":75,"column":6,"nodeType":"337","endLine":75,"endColumn":8,"suggestions":"363"},{"ruleId":"335","severity":1,"message":"364","line":38,"column":6,"nodeType":"337","endLine":38,"endColumn":8,"suggestions":"365"},{"ruleId":"335","severity":1,"message":"352","line":24,"column":6,"nodeType":"337","endLine":24,"endColumn":8,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":17,"column":16,"nodeType":"369","endLine":17,"endColumn":29},{"ruleId":"367","severity":1,"message":"370","line":19,"column":16,"nodeType":"369","endLine":19,"endColumn":31},{"ruleId":"367","severity":1,"message":"370","line":23,"column":16,"nodeType":"369","endLine":23,"endColumn":31},{"ruleId":"367","severity":1,"message":"370","line":25,"column":16,"nodeType":"369","endLine":25,"endColumn":31},{"ruleId":"367","severity":1,"message":"368","line":28,"column":16,"nodeType":"369","endLine":28,"endColumn":29},{"ruleId":"335","severity":1,"message":"352","line":41,"column":6,"nodeType":"337","endLine":41,"endColumn":8,"suggestions":"371"},{"ruleId":"335","severity":1,"message":"352","line":45,"column":6,"nodeType":"337","endLine":45,"endColumn":8,"suggestions":"372"},{"ruleId":"335","severity":1,"message":"352","line":115,"column":6,"nodeType":"337","endLine":115,"endColumn":55,"suggestions":"373"},{"ruleId":"335","severity":1,"message":"374","line":24,"column":6,"nodeType":"337","endLine":24,"endColumn":16,"suggestions":"375"},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"no-unused-vars","'setHasOwnSub' is assigned a value but never used.","Identifier","unusedVar","'saveRollbar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIsAuthenticated' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["378"],"React Hook useEffect has a missing dependency: 'checkIsAuthenticated'. Either include it or remove the dependency array.",["379"],["380"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setQuery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addAlert', 'checkIsAuthenticated', 'query', and 'setIsLoading'. Either include them or remove the dependency array.",["381"],["382"],["383"],["384"],"React Hook useEffect has a missing dependency: 'resetTimeLeft'. Either include it or remove the dependency array.",["385"],"'Header' is defined but never used.","'Label' is defined but never used.","'useState' is defined but never used.",["386"],"react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"allUsersSubmits\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'userId' is assigned a value but never used.","'setAllUsersSubmits' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'resetTimeLeft', 'setAllUsersSubmits', and 'setIsLoading'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'resetTimeLeft' and 'setAllUsersDrafts'. Either include them or remove the dependency array.",["388"],["389"],"react/jsx-pascal-case","Imported JSX component SubA_I_II must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component SubA_III_IV must be in PascalCase or SCREAMING_SNAKE_CASE",["390"],["391"],["392"],"React Hook useEffect has missing dependencies: 'logOut' and 'setTimeLeft'. Either include them or remove the dependency array.",["393"],"no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"396","fix":"398"},{"desc":"399","fix":"400"},{"desc":"394","fix":"401"},{"desc":"394","fix":"402"},{"desc":"394","fix":"403"},{"desc":"404","fix":"405"},{"desc":"404","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"404","fix":"411"},{"desc":"404","fix":"412"},{"desc":"404","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},"Update the dependencies array to be: [checkIsAuthenticated, history, isLoggedIn]",{"range":"418","text":"419"},"Update the dependencies array to be: [checkIsAuthenticated]",{"range":"420","text":"421"},{"range":"422","text":"421"},"Update the dependencies array to be: [addAlert, checkIsAuthenticated, isLoggedIn, query, setIsLoading]",{"range":"423","text":"424"},{"range":"425","text":"419"},{"range":"426","text":"419"},{"range":"427","text":"419"},"Update the dependencies array to be: [resetTimeLeft]",{"range":"428","text":"429"},{"range":"430","text":"429"},"Update the dependencies array to be: [resetTimeLeft, setAllUsersSubmits, setIsLoading]",{"range":"431","text":"432"},"Update the dependencies array to be: [resetTimeLeft, setAllUsersDrafts]",{"range":"433","text":"434"},{"range":"435","text":"429"},{"range":"436","text":"429"},{"range":"437","text":"429"},"Update the dependencies array to be: [submitMode, submitToWatch, newSubmit, curSubmit, resetTimeLeft]",{"range":"438","text":"439"},"Update the dependencies array to be: [logOut, setTimeLeft, timeLeft]",{"range":"440","text":"441"},[985,997],"[checkIsAuthenticated, history, isLoggedIn]",[1146,1148],"[checkIsAuthenticated]",[2188,2190],[1306,1318],"[addAlert, checkIsAuthenticated, isLoggedIn, query, setIsLoading]",[895,907],[949,961],[950,962],[1857,1859],"[resetTimeLeft]",[2134,2136],[2074,2076],"[resetTimeLeft, setAllUsersSubmits, setIsLoading]",[999,1001],"[resetTimeLeft, setAllUsersDrafts]",[605,607],[1012,1014],[1108,1110],[3720,3769],"[submitMode, submitToWatch, newSubmit, curSubmit, resetTimeLeft]",[786,796],"[logOut, setTimeLeft, timeLeft]"]