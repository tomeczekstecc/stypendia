version: '3'
services:
  # stypendia-server:
  #   build:
  #     context: .
  #     args:
  #       NODE_ENV: development
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #   command: npm run devStart
  #   depends_on:
  #     - db_stypendia
  #     - redis_stypendia

  db_stypendia:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./data:/data/mysql_typeorm_stypendia_dev

  adminer_stypendia:
    image: adminer
    restart: always
    env_file:
      - .env
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - db_stypendia

  redis_stypendia:
    image: redis:alpine
    restart: always
    # env_file:
    #   - .env
    ports:
      - 6380:6379

  mongo_logs:
    image: mongo
    restart: always
    # env_file:
    #   - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootowski
      - MONGO_INITDB_ROOT_PASSWORD=A4P!umWaqSVj8^S&
      - MONGO_INITDB_DATABASE=logs
      - MONGO_USERNAME=adminowski
      - MONGO_PASSWORD=XPy4hPZt%B7?tjRr
    ports:
      - 27019:27017
    volumes:
      - ./data:/data/mongo_logs_stypendia_dev
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  mongoweb_logs:
    image: mongo-express
    restart: always
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo_logs
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGOWEB_PORT}:8081
    depends_on:
      - mongo_logs

  # av:
  #debian: image: mkodockx/docker-clamav
  # image: mkodockx/docker-clamav:alpine
  # container_name: nextav
  # restart: unless-stopped
  # ports:
  #   - 3310:3310
#     volumes:
#       - clam:/var/lib/clamav

# volumes:
#   clam:
