version: '3'
services:
  # stypendia-server:
  #   container_name: stypendia_server_dev
  #   restart: always
  #   build:
  #     context: .
  #     args:
  #       NODE_ENV: development
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   ports:
  #     - 5003:5003
  #   environment:
  #     - NODE_ENV=development
  #   command: npm run devStart
  #   depends_on:
  #     db_stypendia:
  #       condition: service_healthy


  db_stypendia:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - ./.env
    ports:
      - 3308:3306
    volumes:
      - ./data:/data/mysql_typeorm_stypendia_dev
    # healthcheck:
    #   test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
    #   timeout: 10s
    #   retries: 3

  adminer_stypendia:
    image: adminer
    restart: always
    env_file:
      - ./.env
    ports:
      - 8083:8080
    depends_on:
      - db_stypendia

  redis_stypendia:
    image: redis:alpine
    restart: always
    ports:
      - 6380:6379


  mongo_logs:
    image: mongo
    restart: always
    # env_file:
    #   - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME = rootowski
      - MONGO_INITDB_ROOT_PASSWORD = A4P!umWaqSVj8^S&
      - MONGO_USERNAME = adminowski
      - MONGO_PASSWORD = XPy4hPZt%B7?tjRr
      - MONGO_HOST = localhost
      - MONGO_PORT = 27019
      - MONGO_INITDB_DATABASE = logs
    ports:
      - 27019:27017
    volumes:
      - ./data:/data/mongo_logs_stypendia_dev
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  mongoweb_logs:
    image: mongo-express
    restart: always
    env_file:
      - ./.env
    # environment:
    #   - ME_CONFIG_MONGODB_SERVER=mongo_logs
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=rootowski
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=A4P!umWaqSVj8^S&
      # - ME_CONFIG_BASICAUTH_USERNAME=adminowski
      # - ME_CONFIG_BASICAUTH_PASSWORD=XPy4hPZt%B7?tjRr
    ports:
      - 8084:8081
    depends_on:
      - mongo_logs

  # av:
  #debian: image: mkodockx/docker-clamav
  # image: mkodockx/docker-clamav:alpine
  # container_name: nextav
  # restart: unless-stopped
  # ports:
  #   - 3310:3310
#     volumes:
#       - clam:/var/lib/clamav

# volumes:
#   clam:
